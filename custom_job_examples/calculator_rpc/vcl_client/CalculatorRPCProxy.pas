//------------------------------------------------------------------
// Proxy Unit Generated by Delphi Microservices Container 4.0.11
// Do not modify this unit!
// Generated at: 2020-12-03 17:03:04
//------------------------------------------------------------------
unit CalculatorRPCProxy;

interface

uses
  System.SysUtils,
  System.Classes,
  MVCFramework.JSONRPC,
  MVCFramework.JSONRPC.Client,
  MVCFramework.Serializer.Commons,
  JsonDataObjects;

type
  TCalculatorRPCProxy = class
  protected
    fRPCExecutor: IMVCJSONRPCExecutor;
    function NewReqID: Int64;
  public
    function RPCExecutor: IMVCJSONRPCExecutor;
    constructor Create(const EndpointURL: String); virtual;
    /// <summary>
    /// Invokes [function Sum(const A: Integer; const B: Integer): Integer]
    /// Returns the sum of two integers
    /// </summary>
    function Sum(const A: Integer; const B: Integer): Integer;
    /// <summary>
    /// Invokes [function Diff(const A: Integer; const B: Integer): Integer]
    /// Returns the difference between two integers
    /// </summary>
    function Diff(const A: Integer; const B: Integer): Integer;
end;

implementation

uses
  System.Net.URLClient,
  System.RTTI;

constructor TCalculatorRPCProxy.Create(const EndpointURL: String);
begin
  inherited Create;
  fRPCExecutor := TMVCJSONRPCExecutor.Create(EndpointURL);
  fRPCExecutor.AddHTTPHeader(TNetHeader.Create('Accept-Encoding', 'gzip'));
  fRPCExecutor.AddHTTPHeader(TNetHeader.Create('User-Agent', 'dmscontainer-delphi-proxy'));

end;

function TCalculatorRPCProxy.NewReqID: Int64;
begin
  Result := 10000 + Random(10000000);
end;

function TCalculatorRPCProxy.RPCExecutor: IMVCJSONRPCExecutor;
begin
  Result := fRPCExecutor;
end;


function TCalculatorRPCProxy.Sum(const A: Integer; const B: Integer): Integer;
var
  lReq: IJSONRPCRequest;
  lResp: IJSONRPCResponse;
begin
  lReq := TJSONRPCRequest.Create(NewReqID, 'Sum');
  lReq.Params.Add(A);
  lReq.Params.Add(B);
  lResp := fRPCExecutor.ExecuteRequest(lReq);
  Result := lResp.Result.AsInteger;
end;


function TCalculatorRPCProxy.Diff(const A: Integer; const B: Integer): Integer;
var
  lReq: IJSONRPCRequest;
  lResp: IJSONRPCResponse;
begin
  lReq := TJSONRPCRequest.Create(NewReqID, 'Diff');
  lReq.Params.Add(A);
  lReq.Params.Add(B);
  lResp := fRPCExecutor.ExecuteRequest(lReq);
  Result := lResp.Result.AsInteger;
end;

end.
